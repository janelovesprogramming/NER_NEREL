100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 3/3 [00:00<00:00,  8.89it/s]
Some weights of BertForTokenClassification were not initialized from the model checkpoint at google-bert/bert-base-multilingual-cased and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
383 383
287 287
298 298
Map: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████| 746/746 [00:00<00:00, 2004.33 examples/s]
Map: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████| 93/93 [00:00<00:00, 1411.91 examples/s]
Map: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████| 94/94 [00:00<00:00, 1487.84 examples/s]
/home/jane/anaconda3/envs/torch/lib/python3.9/site-packages/accelerate/accelerator.py:432: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead:
dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)
  warnings.warn(
  0%|                                                                                                                                  | 0/470 [00:00<?, ?it/s]Traceback (most recent call last):
  File "/home/jane/ner_nerol/src/train.py", line 119, in <module>
    trainer.train()
  File "/home/jane/anaconda3/envs/torch/lib/python3.9/site-packages/transformers/trainer.py", line 1780, in train
    return inner_training_loop(
  File "/home/jane/anaconda3/envs/torch/lib/python3.9/site-packages/transformers/trainer.py", line 2118, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
  File "/home/jane/anaconda3/envs/torch/lib/python3.9/site-packages/transformers/trainer.py", line 3045, in training_step
    self.accelerator.backward(loss)
  File "/home/jane/anaconda3/envs/torch/lib/python3.9/site-packages/accelerate/accelerator.py", line 2001, in backward
    loss.backward(**kwargs)
  File "/home/jane/anaconda3/envs/torch/lib/python3.9/site-packages/torch/_tensor.py", line 522, in backward
    torch.autograd.backward(
  File "/home/jane/anaconda3/envs/torch/lib/python3.9/site-packages/torch/autograd/__init__.py", line 266, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
RuntimeError: element 0 of tensors does not require grad and does not have a grad_fn